---
name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
      - release/**

  workflow_dispatch:

env:
  PROJECT_NAME: products
  IMAGE_NAME: >
    ghcr.io/${{ github.repository_owner }}/products-app:${{ github.sha }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME ./projects/$PROJECT_NAME

      - name: Push image to GitHub Container Registry
        run: docker push $IMAGE_NAME

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull $IMAGE_NAME

      - name: Run tests inside container
        run: docker run --rm $IMAGE_NAME poetry run pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push, test]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull $IMAGE_NAME

      - name: Simulate deploy
        run: |
          echo "ðŸ”§ Simulando deploy fictÃ­cio..."
          docker run -d -p 8000:8000 $IMAGE_NAME
          echo "âœ… AplicaÃ§Ã£o simulada em execuÃ§Ã£o"
